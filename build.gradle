plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/terrariamod.accesswidener")
}

repositories {
	maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = "Ladysnake Libs"
		url = "https://ladysnake.jfrog.io/artifactory/mods"
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
		content {
			includeGroup 'io.github.ladysnake'
			includeGroupByRegex 'io\\.github\\.onyxstudios.*'
		}
	}
	maven {
		url = uri("https://raw.github.com/Ryorama/maven/master")
	}
	maven { url "https://maven.shedaniel.me/" }
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "com.ryorama.ryolib:1.19:${ryolib_version}"

	modImplementation "com.terraformersmc:modmenu:${modmenu_version}"

	include modImplementation("software.bernie.geckolib:geckolib-fabric-1.19:${geckolib_version}")
	include modImplementation("dev.emi:trinkets:${trinkets_version}")
	implementation 'javax.vecmath:vecmath:1.5.2'


	modApi("me.shedaniel.cloth:cloth-config-fabric:${cloth_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	//modImplementation "io.github.ladysnake:satin:${satin_version}"
	//include "io.github.ladysnake:satin:${satin_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
	}
}
